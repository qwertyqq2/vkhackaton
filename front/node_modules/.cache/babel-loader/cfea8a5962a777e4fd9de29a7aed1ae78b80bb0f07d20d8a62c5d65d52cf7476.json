{"ast":null,"code":"var _jsxFileName = \"/home/vladimir/fbc/front/src/components/Posts/Post/PrePost.jsx\";\nimport React from \"react\";\nimport s from \"./Post.module.css\";\nimport parse, { domToReact } from 'html-react-parser';\nimport { NavLink } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PrePost = props => {\n  const html = props.source;\n  const options = {\n    replace: _ref => {\n      let {\n        attribs,\n        children\n      } = _ref;\n      if (!attribs) {\n        return;\n      }\n      if (attribs.class === 'title') {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: s.title,\n          children: domToReact(children, options)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 21\n        }, this);\n      }\n      if (attribs.class === 'content') {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: s.content,\n          children: domToReact(children, options)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }, this);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: s.post,\n    children: [/*#__PURE__*/_jsxDEV(NavLink, {\n      to: \"/post\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: parse(html, options)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.buttons,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.likeButton,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"like-button.png\",\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n_c = PrePost;\nexport default PrePost;\nvar _c;\n$RefreshReg$(_c, \"PrePost\");","map":{"version":3,"names":["React","s","parse","domToReact","NavLink","PrePost","props","html","source","options","replace","attribs","children","class","title","content","post","buttons","likeButton"],"sources":["/home/vladimir/fbc/front/src/components/Posts/Post/PrePost.jsx"],"sourcesContent":["import React from \"react\";\r\nimport s from \"./Post.module.css\";\r\nimport parse, { domToReact } from 'html-react-parser';\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst PrePost = (props) => {\r\n    const html = props.source;\r\n\r\n    const options = {\r\n        replace: ({ attribs, children }) => {\r\n            if (!attribs) {\r\n                return;\r\n            }\r\n\r\n            if (attribs.class === 'title') {\r\n                return (\r\n                    <div className={s.title}>{domToReact(children, options)}</div>\r\n                );\r\n            }\r\n\r\n            if (attribs.class === 'content') {\r\n                return (\r\n                    <div className={s.content}>{domToReact(children, options)}</div>\r\n                );\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className={s.post}>\r\n            <NavLink to='/post'>\r\n                <div>\r\n                    {parse(html, options)}\r\n                </div>\r\n            </NavLink>\r\n            <div className={s.buttons}>\r\n                <div className={s.likeButton}>\r\n                    <img src='like-button.png' alt='' />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PrePost;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,CAAC,MAAM,mBAAmB;AACjC,OAAOC,KAAK,IAAIC,UAAU,QAAQ,mBAAmB;AACrD,SAASC,OAAO,QAAQ,kBAAkB;AAAC;AAE3C,MAAMC,OAAO,GAAIC,KAAK,IAAK;EACvB,MAAMC,IAAI,GAAGD,KAAK,CAACE,MAAM;EAEzB,MAAMC,OAAO,GAAG;IACZC,OAAO,EAAE,QAA2B;MAAA,IAA1B;QAAEC,OAAO;QAAEC;MAAS,CAAC;MAC3B,IAAI,CAACD,OAAO,EAAE;QACV;MACJ;MAEA,IAAIA,OAAO,CAACE,KAAK,KAAK,OAAO,EAAE;QAC3B,oBACI;UAAK,SAAS,EAAEZ,CAAC,CAACa,KAAM;UAAA,UAAEX,UAAU,CAACS,QAAQ,EAAEH,OAAO;QAAC;UAAA;UAAA;UAAA;QAAA,QAAO;MAEtE;MAEA,IAAIE,OAAO,CAACE,KAAK,KAAK,SAAS,EAAE;QAC7B,oBACI;UAAK,SAAS,EAAEZ,CAAC,CAACc,OAAQ;UAAA,UAAEZ,UAAU,CAACS,QAAQ,EAAEH,OAAO;QAAC;UAAA;UAAA;UAAA;QAAA,QAAO;MAExE;IACJ;EACJ,CAAC;EAED,oBACI;IAAK,SAAS,EAAER,CAAC,CAACe,IAAK;IAAA,wBACnB,QAAC,OAAO;MAAC,EAAE,EAAC,OAAO;MAAA,uBACf;QAAA,UACKd,KAAK,CAACK,IAAI,EAAEE,OAAO;MAAC;QAAA;QAAA;QAAA;MAAA;IACnB;MAAA;MAAA;MAAA;IAAA,QACA,eACV;MAAK,SAAS,EAAER,CAAC,CAACgB,OAAQ;MAAA,uBACtB;QAAK,SAAS,EAAEhB,CAAC,CAACiB,UAAW;QAAA,uBACzB;UAAK,GAAG,EAAC,iBAAiB;UAAC,GAAG,EAAC;QAAE;UAAA;UAAA;UAAA;QAAA;MAAG;QAAA;QAAA;QAAA;MAAA;IAClC;MAAA;MAAA;MAAA;IAAA,QACJ;EAAA;IAAA;IAAA;IAAA;EAAA,QACJ;AAEd,CAAC;AAAA,KArCKb,OAAO;AAuCb,eAAeA,OAAO;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}